{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./components/f-form-builder/f-form-builder\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./components/f-form-builder/mixins/types\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./components/f-checkbox-group/f-checkbox-group\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./components/f-radio-group/f-radio-group\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shims.d.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "content",
          "type": {
            "text": "Record<string, string>"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "content",
            "module": "src/shims.d.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "content",
            "module": "src/shims.d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-checkbox-group/f-checkbox-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FCheckboxGroup",
          "members": [
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "CheckboxOptionsType"
              },
              "default": "[]",
              "attribute": "options",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined"
              },
              "default": "\"default\"",
              "attribute": "state",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "FCheckboxGroupValue | undefined"
              },
              "default": "[]",
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "\"vertical\" | \"horizontal\" | undefined"
              },
              "default": "\"vertical\"",
              "attribute": "direction",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "gap",
              "type": {
                "text": "\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined"
              },
              "default": "\"small\"",
              "attribute": "gap",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "helperText",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleChange",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isChecked",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "String"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "options",
              "type": {
                "text": "CheckboxOptionsType"
              },
              "default": "[]",
              "fieldName": "options"
            },
            {
              "name": "state",
              "type": {
                "text": "\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined"
              },
              "default": "\"default\"",
              "fieldName": "state"
            },
            {
              "name": "value",
              "type": {
                "text": "FCheckboxGroupValue | undefined"
              },
              "default": "[]",
              "fieldName": "value"
            },
            {
              "name": "direction",
              "type": {
                "text": "\"vertical\" | \"horizontal\" | undefined"
              },
              "default": "\"vertical\"",
              "fieldName": "direction"
            },
            {
              "name": "gap",
              "type": {
                "text": "\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined"
              },
              "default": "\"small\"",
              "fieldName": "gap"
            },
            {
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "helperText"
            }
          ],
          "superclass": {
            "name": "FRoot",
            "package": "@cldcvr/flow-core"
          },
          "tagName": "f-checkbox-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FCheckboxGroup",
          "declaration": {
            "name": "FCheckboxGroup",
            "module": "src/components/f-checkbox-group/f-checkbox-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "f-checkbox-group",
          "declaration": {
            "name": "FCheckboxGroup",
            "module": "src/components/f-checkbox-group/f-checkbox-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/f-form-builder.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FFormBuilder",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "FormBuilderConfig"
              },
              "attribute": "config"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "FormBuilderValues"
              },
              "attribute": "values",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "FormBuilderState"
              },
              "description": "Internal state of formbuilder"
            },
            {
              "kind": "field",
              "name": "formRef",
              "type": {
                "text": "Ref<HTMLFormElement>"
              },
              "description": "form reference"
            },
            {
              "kind": "field",
              "name": "groups",
              "type": {
                "text": "InternalFormBuilderGroup[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "updateTriggerId",
              "type": {
                "text": "string | undefined"
              },
              "default": "undefined",
              "description": "holds name of last deleted group"
            },
            {
              "kind": "method",
              "name": "resetState",
              "description": "resetting internal state"
            },
            {
              "kind": "field",
              "name": "duplicateGroup",
              "default": "duplicateGroup"
            },
            {
              "kind": "field",
              "name": "validateForm",
              "default": "validateForm"
            },
            {
              "kind": "field",
              "name": "validateField",
              "default": "validateField"
            },
            {
              "kind": "field",
              "name": "bindValidation",
              "default": "bindValidation"
            },
            {
              "kind": "field",
              "name": "renderFields",
              "default": "renderFields"
            },
            {
              "kind": "field",
              "name": "renderGroups",
              "default": "renderGroups"
            },
            {
              "kind": "field",
              "name": "removeGroup",
              "default": "removeGroup"
            },
            {
              "kind": "field",
              "name": "handleGroupDuplicate",
              "default": "handleGroupDuplicate"
            },
            {
              "kind": "field",
              "name": "checkSubmit",
              "default": "checkSubmit"
            },
            {
              "kind": "field",
              "name": "checkFieldType",
              "default": "checkFieldType"
            },
            {
              "kind": "field",
              "name": "checkSuffixConditions",
              "default": "checkSuffixConditions"
            },
            {
              "kind": "field",
              "name": "checkAllShowConditions",
              "default": "checkAllShowConditions"
            },
            {
              "kind": "field",
              "name": "submit",
              "default": "submit"
            },
            {
              "kind": "field",
              "name": "onSubmit",
              "default": "onSubmit"
            },
            {
              "kind": "field",
              "name": "handleFormChange",
              "default": "handleFormChange"
            },
            {
              "kind": "field",
              "name": "bindValues",
              "default": "bindValues"
            },
            {
              "kind": "field",
              "name": "emitStateChange",
              "default": "emitStateChange"
            }
          ],
          "attributes": [
            {
              "name": "config",
              "type": {
                "text": "FormBuilderConfig"
              },
              "fieldName": "config"
            },
            {
              "name": "values",
              "type": {
                "text": "FormBuilderValues"
              },
              "fieldName": "values"
            }
          ],
          "superclass": {
            "name": "FRoot",
            "package": "@cldcvr/flow-core/src/mixins/components/f-root/f-root"
          },
          "tagName": "f-form-builder",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FFormBuilder",
          "declaration": {
            "name": "FFormBuilder",
            "module": "src/components/f-form-builder/f-form-builder.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "f-form-builder",
          "declaration": {
            "name": "FFormBuilder",
            "module": "src/components/f-form-builder/f-form-builder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isEmptyObject",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "Object"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isNullOrUndefined",
          "return": {
            "type": {
              "text": "value is undefined | null"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isEmptyArray",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "arr",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isValidEmail",
          "parameters": [
            {
              "name": "email",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isValidHttpUrl",
          "parameters": [
            {
              "name": "stringurl",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getSingleParam",
          "parameters": [
            {
              "name": "params",
              "type": {
                "text": "[TParam] | Record<string, TParam>"
              }
            },
            {
              "name": "paramName",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isEmpty",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isEmptyObject",
          "declaration": {
            "name": "isEmptyObject",
            "module": "src/components/f-form-builder/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isNullOrUndefined",
          "declaration": {
            "name": "isNullOrUndefined",
            "module": "src/components/f-form-builder/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isEmptyArray",
          "declaration": {
            "name": "isEmptyArray",
            "module": "src/components/f-form-builder/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isValidEmail",
          "declaration": {
            "name": "isValidEmail",
            "module": "src/components/f-form-builder/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isValidHttpUrl",
          "declaration": {
            "name": "isValidHttpUrl",
            "module": "src/components/f-form-builder/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "getSingleParam",
          "declaration": {
            "name": "getSingleParam",
            "module": "src/components/f-form-builder/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isEmpty",
          "declaration": {
            "name": "isEmpty",
            "module": "src/components/f-form-builder/utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-radio-group/f-radio-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FRadioGroup",
          "members": [
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "RadioOptionsType"
              },
              "default": "[]",
              "attribute": "options",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined"
              },
              "default": "\"default\"",
              "attribute": "state",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "direction",
              "type": {
                "text": "\"vertical\" | \"horizontal\" | undefined"
              },
              "default": "\"vertical\"",
              "attribute": "direction",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "gap",
              "type": {
                "text": "\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined"
              },
              "default": "\"small\"",
              "attribute": "gap",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "helperText",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleChange",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isChecked",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "options",
              "type": {
                "text": "RadioOptionsType"
              },
              "default": "[]",
              "fieldName": "options"
            },
            {
              "name": "state",
              "type": {
                "text": "\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined"
              },
              "default": "\"default\"",
              "fieldName": "state"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "value"
            },
            {
              "name": "direction",
              "type": {
                "text": "\"vertical\" | \"horizontal\" | undefined"
              },
              "default": "\"vertical\"",
              "fieldName": "direction"
            },
            {
              "name": "gap",
              "type": {
                "text": "\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined"
              },
              "default": "\"small\"",
              "fieldName": "gap"
            },
            {
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "helperText"
            }
          ],
          "superclass": {
            "name": "FRoot",
            "package": "@cldcvr/flow-core"
          },
          "summary": "Text component includes Headings, titles, body texts and links.",
          "tagName": "f-radio-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FRadioGroup",
          "declaration": {
            "name": "FRadioGroup",
            "module": "src/components/f-radio-group/f-radio-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "f-radio-group",
          "declaration": {
            "name": "FRadioGroup",
            "module": "src/components/f-radio-group/f-radio-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/default-validation-messages/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "messages",
          "type": {
            "text": "Record<string, string>"
          },
          "default": "{\n  required: \"{{name}} is required field\",\n  email: \"{{name}} is not a valid email address\",\n  between: \"{{name}} must be between {{min}} and {{max}}\",\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "messages",
            "module": "src/components/f-form-builder/default-validation-messages/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/default-validations/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "defaultValidations",
          "parameters": [
            {
              "name": "fieldType",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "validations",
              "type": {
                "text": "FormBuilderValidationRules"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "defaultValidations",
            "module": "src/components/f-form-builder/default-validations/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/button.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_field",
              "type": {
                "text": "FormBuilderField"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "fieldRef",
              "type": {
                "text": "Ref<FFormInputElements>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": ""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "",
            "module": "src/components/f-form-builder/fields/button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/checkbox.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_field",
              "type": {
                "text": "FormBuilderField"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "fieldRef",
              "type": {
                "text": "Ref<FFormInputElements>"
              }
            },
            {
              "name": "params",
              "optional": true,
              "type": {
                "text": "Record<string, unknown>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": ""
        },
        {
          "kind": "function",
          "name": ""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "",
            "module": "src/components/f-form-builder/fields/checkbox.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/icon-button.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_field",
              "type": {
                "text": "FormBuilderField"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "fieldRef",
              "type": {
                "text": "Ref<FFormInputElements>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": ""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "",
            "module": "src/components/f-form-builder/fields/icon-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "all",
          "type": {
            "text": "Record<string, FormBuilderFieldRenderFunction>"
          },
          "default": "{\n  text,\n  checkbox,\n  textarea,\n  radio,\n  switchButton,\n  select,\n  button,\n  [\"icon-button\"]: iconButton,\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "all",
            "module": "src/components/f-form-builder/fields/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/radio.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_field",
              "type": {
                "text": "FormBuilderField"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "fieldRef",
              "type": {
                "text": "Ref<FFormInputElements>"
              }
            },
            {
              "name": "params",
              "optional": true,
              "type": {
                "text": "Record<string, unknown>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": ""
        },
        {
          "kind": "function",
          "name": ""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "",
            "module": "src/components/f-form-builder/fields/radio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/select.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_field",
              "type": {
                "text": "FormBuilderField"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "fieldRef",
              "type": {
                "text": "Ref<FFormInputElements>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": ""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "",
            "module": "src/components/f-form-builder/fields/select.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/switch.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_field",
              "type": {
                "text": "FormBuilderField"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "fieldRef",
              "type": {
                "text": "Ref<FFormInputElements>"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": ""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "",
            "module": "src/components/f-form-builder/fields/switch.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/text.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_field",
              "type": {
                "text": "FormBuilderField"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "fieldRef",
              "type": {
                "text": "Ref<FFormInputElements>"
              }
            },
            {
              "name": "params",
              "optional": true,
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": ""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "",
            "module": "src/components/f-form-builder/fields/text.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/fields/textarea.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_field",
              "type": {
                "text": "FormBuilderField"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number"
              }
            },
            {
              "name": "fieldRef",
              "type": {
                "text": "Ref<FFormInputElements>"
              }
            },
            {
              "name": "params",
              "optional": true,
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": ""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "",
            "module": "src/components/f-form-builder/fields/textarea.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/mixins/constants.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "GROUP_FIELD_NAME_SEPARATOR",
          "type": {
            "text": "string"
          },
          "default": "\".$\""
        },
        {
          "kind": "variable",
          "name": "CLONED_GROUP_NAME_SEPARATOR",
          "type": {
            "text": "string"
          },
          "default": "\"_$\""
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "GROUP_FIELD_NAME_SEPARATOR",
          "declaration": {
            "name": "GROUP_FIELD_NAME_SEPARATOR",
            "module": "src/components/f-form-builder/mixins/constants.ts"
          }
        },
        {
          "kind": "js",
          "name": "CLONED_GROUP_NAME_SEPARATOR",
          "declaration": {
            "name": "CLONED_GROUP_NAME_SEPARATOR",
            "module": "src/components/f-form-builder/mixins/constants.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/mixins/group-manager.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "handleGroupDuplicate",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "group",
              "type": {
                "text": "InternalFormBuilderGroup"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "duplicateGroup",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "groupName",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "d",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeGroup",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "groupName",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "handleGroupDuplicate",
          "declaration": {
            "name": "handleGroupDuplicate",
            "module": "src/components/f-form-builder/mixins/group-manager.ts"
          }
        },
        {
          "kind": "js",
          "name": "duplicateGroup",
          "declaration": {
            "name": "duplicateGroup",
            "module": "src/components/f-form-builder/mixins/group-manager.ts"
          }
        },
        {
          "kind": "js",
          "name": "removeGroup",
          "declaration": {
            "name": "removeGroup",
            "module": "src/components/f-form-builder/mixins/group-manager.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/mixins/helpers.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "checkAllShowConditions",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            }
          ],
          "description": "check if condition is satisfying for any element"
        },
        {
          "kind": "function",
          "name": "checkSuffixConditions",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            }
          ],
          "description": "check condition to display suffix or not"
        },
        {
          "kind": "function",
          "name": "checkFieldType",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "check field type and return genric"
        },
        {
          "kind": "function",
          "name": "checkSubmit",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "event",
              "type": {
                "text": "MouseEvent"
              }
            }
          ],
          "description": "check if submit trigger is added"
        },
        {
          "kind": "function",
          "name": "emitStateChange",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "bindValues",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "inputElement",
              "type": {
                "text": "FFormInputElements | undefined"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "index"
            },
            {
              "name": "isMultiple"
            }
          ],
          "description": "Add/Display initial values given by user"
        },
        {
          "kind": "function",
          "name": "handleFormChange",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "event",
              "type": {
                "text": "Event"
              }
            }
          ],
          "description": "handle input event of form"
        },
        {
          "kind": "function",
          "name": "onSubmit",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "event",
              "type": {
                "text": "SubmitEvent"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "submit",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "checkAllShowConditions",
          "declaration": {
            "name": "checkAllShowConditions",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "checkSuffixConditions",
          "declaration": {
            "name": "checkSuffixConditions",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "checkFieldType",
          "declaration": {
            "name": "checkFieldType",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "checkSubmit",
          "declaration": {
            "name": "checkSubmit",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "emitStateChange",
          "declaration": {
            "name": "emitStateChange",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "bindValues",
          "declaration": {
            "name": "bindValues",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "handleFormChange",
          "declaration": {
            "name": "handleFormChange",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "onSubmit",
          "declaration": {
            "name": "onSubmit",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        },
        {
          "kind": "js",
          "name": "submit",
          "declaration": {
            "name": "submit",
            "module": "src/components/f-form-builder/mixins/helpers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/mixins/proxies.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getGroupsProxy",
          "parameters": [
            {
              "name": "element",
              "type": {
                "text": "FFormBuilder"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getGroupsProxy",
          "declaration": {
            "name": "getGroupsProxy",
            "module": "src/components/f-form-builder/mixins/proxies.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/mixins/renderer.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderGroups",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            }
          ],
          "description": "build/render form based on config"
        },
        {
          "kind": "function",
          "name": "renderFields",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "groupname",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "fields",
              "type": {
                "text": "Record<string, FormBuilderField>"
              }
            },
            {
              "name": "group",
              "type": {
                "text": "FormBuilderGroup"
              }
            }
          ],
          "description": "render field based on field config"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderGroups",
          "declaration": {
            "name": "renderGroups",
            "module": "src/components/f-form-builder/mixins/renderer.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderFields",
          "declaration": {
            "name": "renderFields",
            "module": "src/components/f-form-builder/mixins/renderer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/mixins/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/mixins/validation.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "validateForm",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "silent",
              "default": "false"
            }
          ],
          "description": "validate whole form"
        },
        {
          "kind": "function",
          "name": "bindValidation",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "inputElement",
              "type": {
                "text": "FFormInputElements"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "validation rules listener added on `input` event."
        },
        {
          "kind": "function",
          "name": "validateField",
          "parameters": [
            {
              "name": "this",
              "type": {
                "text": "FFormBuilder"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "inputElement",
              "type": {
                "text": "FFormInputElements"
              },
              "description": "ref of field"
            },
            {
              "name": "silent",
              "default": "false",
              "description": "if true then errors are not rendered, they are added in state only"
            },
            {
              "name": "filter",
              "optional": true,
              "type": {
                "text": "(r: FormBuilderGenericValidationRule) => boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "validateForm",
          "declaration": {
            "name": "validateForm",
            "module": "src/components/f-form-builder/mixins/validation.ts"
          }
        },
        {
          "kind": "js",
          "name": "bindValidation",
          "declaration": {
            "name": "bindValidation",
            "module": "src/components/f-form-builder/mixins/validation.ts"
          }
        },
        {
          "kind": "js",
          "name": "validateField",
          "declaration": {
            "name": "validateField",
            "module": "src/components/f-form-builder/mixins/validation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/mixins/validator.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "validate",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "elementRules",
              "type": {
                "text": "FormBuilderValidationRules"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "validate",
            "module": "src/components/f-form-builder/mixins/validator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/validation-rules/between.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "betweenValidator",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "value"
            },
            {
              "name": "params"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "betweenValidator",
            "module": "src/components/f-form-builder/validation-rules/between.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/validation-rules/email.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "emailValidator",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "emailValidator",
            "module": "src/components/f-form-builder/validation-rules/email.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/validation-rules/index.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "all",
          "type": {
            "text": "Record<string, FormBuilderValidatorFunction<unknown, any>>"
          },
          "default": "{\n  required,\n  email,\n  between,\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "all",
            "module": "src/components/f-form-builder/validation-rules/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/f-form-builder/validation-rules/required.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "requiredValidator",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "requiredValidator",
            "module": "src/components/f-form-builder/validation-rules/required.ts"
          }
        }
      ]
    }
  ]
}
