{
  "version": 1,
  "tags": [
    {
      "name": "f-checkbox-group",
      "description": "Events:\n\n  * `input` {`CustomEvent<{ value: string[]; }>`} - \n\nAttributes:\n\n  * `options` {`CheckboxOptionsType`} - \n\n  * `state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\n  * `value` {`FCheckboxGroupValue | undefined`} - \n\n  * `direction` {`\"vertical\" | \"horizontal\" | undefined`} - \n\n  * `gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\n  * `helperText` {`string | undefined`} - \n\n  * `tooltip` {`string | undefined`} - \n\nProperties:\n\n  * `options` {`CheckboxOptionsType`} - \n\n  * `state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\n  * `value` {`FCheckboxGroupValue | undefined`} - \n\n  * `direction` {`\"vertical\" | \"horizontal\" | undefined`} - \n\n  * `gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\n  * `helperText` {`string | undefined`} - \n\n  * `styles` {`CSSResult[]`} - css loaded from scss file\n\n  * `tooltipElement` {`HTMLElement`} - \n\n  * `tooltip` {`string | undefined`} - ",
      "attributes": [
        {
          "name": "options",
          "description": "`options` {`CheckboxOptionsType`} - \n\nProperty: options\n\nDefault: "
        },
        {
          "name": "state",
          "description": "`state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\nProperty: state\n\nDefault: default",
          "values": [
            {
              "name": "primary"
            },
            {
              "name": "default"
            },
            {
              "name": "success"
            },
            {
              "name": "warning"
            },
            {
              "name": "danger"
            }
          ]
        },
        {
          "name": "value",
          "description": "`value` {`FCheckboxGroupValue | undefined`} - \n\nProperty: value",
          "values": []
        },
        {
          "name": "direction",
          "description": "`direction` {`\"vertical\" | \"horizontal\" | undefined`} - \n\nProperty: direction\n\nDefault: vertical",
          "values": [
            {
              "name": "vertical"
            },
            {
              "name": "horizontal"
            }
          ]
        },
        {
          "name": "gap",
          "description": "`gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\nProperty: gap\n\nDefault: small",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            },
            {
              "name": "x-small"
            }
          ]
        },
        {
          "name": "helperText",
          "description": "`helperText` {`string | undefined`} - \n\nProperty: helperText",
          "values": []
        },
        {
          "name": "tooltip",
          "description": "`tooltip` {`string | undefined`} - \n\nProperty: tooltip",
          "values": []
        },
        {
          "name": "oninput",
          "description": "`input` {`CustomEvent<{ value: string[]; }>`} - "
        }
      ]
    },
    {
      "name": "f-form-array",
      "description": "Events:\n\n  * `showWhen` {`CustomEvent<boolean>`} - \n\n  * `input` {`CustomEvent<ArrayValueType>`} - \n\nAttributes:\n\n  * `config` {`FormBuilderArrayField`} - \n\n  * `value` {`ArrayValueType`} - \n\n  * `state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\n  * `tooltip` {`string | undefined`} - \n\nProperties:\n\n  * `config` {`FormBuilderArrayField`} - \n\n  * `value` {`ArrayValueType`} - \n\n  * `state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\n  * `fieldRefs` {`Ref<FFormInputElements>[]`} - \n\n  * `showWhenSubject` - \n\n  * `styles` {`CSSResult[]`} - css loaded from scss file\n\n  * `tooltipElement` {`HTMLElement`} - \n\n  * `tooltip` {`string | undefined`} - ",
      "attributes": [
        {
          "name": "config",
          "description": "`config` {`FormBuilderArrayField`} - \n\nProperty: config"
        },
        {
          "name": "value",
          "description": "`value` {`ArrayValueType`} - \n\nProperty: value"
        },
        {
          "name": "state",
          "description": "`state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\nProperty: state\n\nDefault: default",
          "values": [
            {
              "name": "primary"
            },
            {
              "name": "default"
            },
            {
              "name": "success"
            },
            {
              "name": "warning"
            },
            {
              "name": "danger"
            }
          ]
        },
        {
          "name": "tooltip",
          "description": "`tooltip` {`string | undefined`} - \n\nProperty: tooltip",
          "values": []
        },
        {
          "name": "onshowWhen",
          "description": "`showWhen` {`CustomEvent<boolean>`} - "
        },
        {
          "name": "oninput",
          "description": "`input` {`CustomEvent<ArrayValueType>`} - "
        }
      ]
    },
    {
      "name": "f-form-builder",
      "description": "Events:\n\n  * `submit` {`CustomEvent<string | number | string[] | number[] | Record<string, unknown> | Record<string, unknown>[]>`} - \n\n  * `input` {`CustomEvent<string | number | string[] | number[] | Record<string, unknown> | Record<string, unknown>[]>`} - \n\n  * `stateChange` {`CustomEvent<FormBuilderState>`} - \n\n  * `showWhen` {`CustomEvent<boolean>`} - \n\nAttributes:\n\n  * `name` {`string`} - \n\n  * `field` {`FormBuilderField`} - \n\n  * `values` - \n\n  * `size` {`\"medium\" | \"small\" | undefined`} - \n\n  * `variant` {`\"curved\" | \"round\" | \"block\" | undefined`} - \n\n  * `category` {`\"fill\" | \"outline\" | \"transparent\" | undefined`} - \n\n  * `gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\n  * `separator` {`boolean | undefined`} - \n\n  * `tooltip` {`string | undefined`} - \n\nProperties:\n\n  * `name` {`string`} - \n\n  * `field` {`FormBuilderField`} - \n\n  * `values` - \n\n  * `size` {`\"medium\" | \"small\" | undefined`} - \n\n  * `variant` {`\"curved\" | \"round\" | \"block\" | undefined`} - \n\n  * `category` {`\"fill\" | \"outline\" | \"transparent\" | undefined`} - \n\n  * `gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\n  * `separator` {`boolean | undefined`} - \n\n  * `fieldRef` - \n\n  * `formRef` - \n\n  * `state` {`FormBuilderState`} - \n\n  * `showWhenSubject` - \n\n  * `styles` {`CSSResult[]`} - css loaded from scss file\n\n  * `tooltipElement` {`HTMLElement`} - \n\n  * `tooltip` {`string | undefined`} - ",
      "attributes": [
        {
          "name": "name",
          "description": "`name` {`string`} - \n\nProperty: name"
        },
        {
          "name": "field",
          "description": "`field` {`FormBuilderField`} - \n\nProperty: field",
          "values": []
        },
        {
          "name": "values",
          "description": "`values` - \n\nProperty: values",
          "values": []
        },
        {
          "name": "size",
          "description": "`size` {`\"medium\" | \"small\" | undefined`} - \n\nProperty: size\n\nDefault: medium",
          "values": [
            {
              "name": "medium"
            },
            {
              "name": "small"
            }
          ]
        },
        {
          "name": "variant",
          "description": "`variant` {`\"curved\" | \"round\" | \"block\" | undefined`} - \n\nProperty: variant\n\nDefault: curved",
          "values": [
            {
              "name": "curved"
            },
            {
              "name": "round"
            },
            {
              "name": "block"
            }
          ]
        },
        {
          "name": "category",
          "description": "`category` {`\"fill\" | \"outline\" | \"transparent\" | undefined`} - \n\nProperty: category\n\nDefault: fill",
          "values": [
            {
              "name": "fill"
            },
            {
              "name": "outline"
            },
            {
              "name": "transparent"
            }
          ]
        },
        {
          "name": "gap",
          "description": "`gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\nProperty: gap\n\nDefault: medium",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            },
            {
              "name": "x-small"
            }
          ]
        },
        {
          "name": "separator",
          "description": "`separator` {`boolean | undefined`} - \n\nProperty: separator\n\nDefault: false",
          "values": []
        },
        {
          "name": "tooltip",
          "description": "`tooltip` {`string | undefined`} - \n\nProperty: tooltip",
          "values": []
        },
        {
          "name": "onsubmit",
          "description": "`submit` {`CustomEvent<string | number | string[] | number[] | Record<string, unknown> | Record<string, unknown>[]>`} - "
        },
        {
          "name": "oninput",
          "description": "`input` {`CustomEvent<string | number | string[] | number[] | Record<string, unknown> | Record<string, unknown>[]>`} - "
        },
        {
          "name": "onstateChange",
          "description": "`stateChange` {`CustomEvent<FormBuilderState>`} - "
        },
        {
          "name": "onshowWhen",
          "description": "`showWhen` {`CustomEvent<boolean>`} - "
        }
      ]
    },
    {
      "name": "f-form-object",
      "description": "Events:\n\n  * `input` {`CustomEvent<ObjectValueType>`} - \n\n  * `showWhen` {`CustomEvent<boolean>`} - \n\nAttributes:\n\n  * `config` {`FormBuilderObjectField`} - \n\n  * `value` - \n\n  * `state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\n  * `tooltip` {`string | undefined`} - \n\nProperties:\n\n  * `config` {`FormBuilderObjectField`} - \n\n  * `value` - \n\n  * `state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\n  * `fieldRefs` - \n\n  * `showWhenSubject` - \n\n  * `styles` {`CSSResult[]`} - css loaded from scss file\n\n  * `tooltipElement` {`HTMLElement`} - \n\n  * `tooltip` {`string | undefined`} - ",
      "attributes": [
        {
          "name": "config",
          "description": "`config` {`FormBuilderObjectField`} - \n\nProperty: config"
        },
        {
          "name": "value",
          "description": "`value` - \n\nProperty: value"
        },
        {
          "name": "state",
          "description": "`state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\nProperty: state\n\nDefault: default",
          "values": [
            {
              "name": "primary"
            },
            {
              "name": "default"
            },
            {
              "name": "success"
            },
            {
              "name": "warning"
            },
            {
              "name": "danger"
            }
          ]
        },
        {
          "name": "tooltip",
          "description": "`tooltip` {`string | undefined`} - \n\nProperty: tooltip",
          "values": []
        },
        {
          "name": "oninput",
          "description": "`input` {`CustomEvent<ObjectValueType>`} - "
        },
        {
          "name": "onshowWhen",
          "description": "`showWhen` {`CustomEvent<boolean>`} - "
        }
      ]
    },
    {
      "name": "f-radio-group",
      "description": "Events:\n\n  * `input` {`CustomEvent<{ value: string; }>`} - \n\nAttributes:\n\n  * `options` {`CheckboxOptionsType`} - \n\n  * `state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\n  * `value` {`string | undefined`} - \n\n  * `direction` {`\"vertical\" | \"horizontal\" | undefined`} - \n\n  * `gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\n  * `helperText` {`string | undefined`} - \n\n  * `tooltip` {`string | undefined`} - \n\nProperties:\n\n  * `options` {`CheckboxOptionsType`} - \n\n  * `state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\n  * `value` {`string | undefined`} - \n\n  * `direction` {`\"vertical\" | \"horizontal\" | undefined`} - \n\n  * `gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\n  * `helperText` {`string | undefined`} - \n\n  * `styles` {`CSSResult[]`} - css loaded from scss file\n\n  * `tooltipElement` {`HTMLElement`} - \n\n  * `tooltip` {`string | undefined`} - ",
      "attributes": [
        {
          "name": "options",
          "description": "`options` {`CheckboxOptionsType`} - \n\nProperty: options\n\nDefault: "
        },
        {
          "name": "state",
          "description": "`state` {`\"primary\" | \"default\" | \"success\" | \"warning\" | \"danger\" | undefined`} - \n\nProperty: state\n\nDefault: default",
          "values": [
            {
              "name": "primary"
            },
            {
              "name": "default"
            },
            {
              "name": "success"
            },
            {
              "name": "warning"
            },
            {
              "name": "danger"
            }
          ]
        },
        {
          "name": "value",
          "description": "`value` {`string | undefined`} - \n\nProperty: value",
          "values": []
        },
        {
          "name": "direction",
          "description": "`direction` {`\"vertical\" | \"horizontal\" | undefined`} - \n\nProperty: direction\n\nDefault: vertical",
          "values": [
            {
              "name": "vertical"
            },
            {
              "name": "horizontal"
            }
          ]
        },
        {
          "name": "gap",
          "description": "`gap` {`\"large\" | \"medium\" | \"small\" | \"x-small\" | undefined`} - \n\nProperty: gap\n\nDefault: small",
          "values": [
            {
              "name": "large"
            },
            {
              "name": "medium"
            },
            {
              "name": "small"
            },
            {
              "name": "x-small"
            }
          ]
        },
        {
          "name": "helperText",
          "description": "`helperText` {`string | undefined`} - \n\nProperty: helperText",
          "values": []
        },
        {
          "name": "tooltip",
          "description": "`tooltip` {`string | undefined`} - \n\nProperty: tooltip",
          "values": []
        },
        {
          "name": "oninput",
          "description": "`input` {`CustomEvent<{ value: string; }>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}