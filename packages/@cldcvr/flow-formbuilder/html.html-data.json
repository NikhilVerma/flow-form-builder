{
  "version": 1,
  "tags": [
    {
      "name": "f-form-builder",
      "description": "Events:\n\n  * `input` {`CustomEvent<{ [x: string]: Record<string, string | number | string[] | number[]>; }>`} - \n\n  * `submit` {`CustomEvent<FormBuilderValues>`} - \n\n  * `stateChange` {`CustomEvent<{ isValid: boolean; isChanged: boolean; errors: Record<string, string>; refs: Record<string, Ref<HTMLInputElement>>; rules: Record<string, FormBuilderValidationRules | undefined>; errorRefs: Record<...>; showFunctions: Map<...>; }>`} - \n\nAttributes:\n\n  * `config` {`FormBuilderConfig`} - \n\n  * `values` - \n\nProperties:\n\n  * `config` {`FormBuilderConfig`} - \n\n  * `values` - \n\n  * `state` {`FormBuilderState`} - Internal state of formbuilder\n\n  * `formRef` - form reference\n\n  * `styles` {`CSSResult[]`} - css loaded from scss file",
      "attributes": [
        {
          "name": "config",
          "description": "`config` {`FormBuilderConfig`} - \n\nProperty: config"
        },
        {
          "name": "values",
          "description": "`values` - \n\nProperty: values"
        },
        {
          "name": "oninput",
          "description": "`input` {`CustomEvent<{ [x: string]: Record<string, string | number | string[] | number[]>; }>`} - "
        },
        {
          "name": "onsubmit",
          "description": "`submit` {`CustomEvent<FormBuilderValues>`} - "
        },
        {
          "name": "onstateChange",
          "description": "`stateChange` {`CustomEvent<{ isValid: boolean; isChanged: boolean; errors: Record<string, string>; refs: Record<string, Ref<HTMLInputElement>>; rules: Record<string, FormBuilderValidationRules | undefined>; errorRefs: Record<...>; showFunctions: Map<...>; }>`} - "
        }
      ]
    }
  ],
  "globalAttributes": [],
  "valueSets": []
}